<UserControl x:Class="ConsultApp.Booking.BookingPage1"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:ConsultApp"
             mc:Ignorable="d" 
             d:DesignHeight="366" d:DesignWidth="700">
    <UserControl.Resources>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="materialDesign:RippleAssist.Feedback" Value="White"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth1"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,4"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible" Value="False"/>
            <Setter Property="materialDesign:ButtonProgressAssist.Opacity" Value="0.4"/>
            <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                <Grid>
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{Binding (materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                        <Border.Effect>
                                            <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <materialDesign:ShadowConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Border.Effect>
                                    </Border>
                                    <ProgressBar x:Name="ProgressBar" Background="{Binding (materialDesign:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding (materialDesign:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" Height="{TemplateBinding Height}" IsIndeterminate="{Binding (materialDesign:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource TemplatedParent}}" Maximum="{Binding (materialDesign:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource TemplatedParent}}" Minimum="{Binding (materialDesign:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource TemplatedParent}}" Opacity="{Binding (materialDesign:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource MaterialDesignLinearProgressBar}" Value="{Binding (materialDesign:ButtonProgressAssist.Value), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ButtonBase}}}">
                                        <ProgressBar.Visibility>
                                            <Binding Path="(materialDesign:ButtonProgressAssist.IsIndicatorVisible)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </ProgressBar.Visibility>
                                    </ProgressBar>
                                </Grid>
                            </AdornerDecorator>
                            <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="materialDesign:ShadowAssist.Darken" TargetName="border" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Border Background="#FFFFFBFB" CornerRadius="15">
        <Grid>
            <StackPanel Orientation="Vertical" Margin="20" >
                <DockPanel>
                    <TextBlock Text="1. " Width="20" DockPanel.Dock="Left" TextAlignment="Center" VerticalAlignment="Center" FontSize="14"/>
                    <Button x:Name="btn_BookingFirst" DockPanel.Dock="Right" Width="110" Content="Забронировать" Padding="2" Background="{x:Null}" BorderBrush="Black" BorderThickness="1" Style="{DynamicResource ButtonStyle1}"/>
                    <TextBlock x:Name="stateDoubleLessonFirst" DockPanel.Dock="Left"/>
                </DockPanel>
                <TextBlock Height="10"/>
                <DockPanel>
                    <TextBlock Text="2. " Width="20" DockPanel.Dock="Left" TextAlignment="Center" VerticalAlignment="Center" FontSize="14"/>
                    <Button x:Name="btn_BookingSecond" DockPanel.Dock="Right" Width="110" Content="Забронировать" Padding="2" Background="{x:Null}" BorderBrush="Black" BorderThickness="1" Style="{DynamicResource ButtonStyle1}"/>
                    <TextBlock x:Name="stateDoubleLessonSecond" DockPanel.Dock="Left"/>
                </DockPanel>
                <TextBlock Height="10"/>
                <DockPanel>
                    <TextBlock Text="3. " Width="20" DockPanel.Dock="Left" TextAlignment="Center" VerticalAlignment="Center" FontSize="14"/>
                    <Button x:Name="btn_BookingThird" DockPanel.Dock="Right" Width="110" Content="Забронировать" Padding="2" Background="{x:Null}" BorderBrush="Black" BorderThickness="1" Style="{DynamicResource ButtonStyle1}"/>
                    <TextBlock x:Name="stateDoubleLessonThird" DockPanel.Dock="Left"/>
                </DockPanel>
                <TextBlock Height="10"/>
                <DockPanel>
                    <TextBlock Text="4. " Width="20" DockPanel.Dock="Left" TextAlignment="Center" VerticalAlignment="Center" FontSize="14"/>
                    <Button x:Name="btn_BookingFourth" DockPanel.Dock="Right" Width="110" Content="Забронировать" Padding="2" Background="{x:Null}" BorderBrush="Black" BorderThickness="1" Style="{DynamicResource ButtonStyle1}"/>
                    <TextBlock x:Name="stateDoubleLessonFourth" DockPanel.Dock="Left"/>
                </DockPanel>
                <TextBlock Height="10"/>
                <DockPanel>
                    <TextBlock Text="5. " Width="20" DockPanel.Dock="Left" TextAlignment="Center" VerticalAlignment="Center" FontSize="14"/>
                    <Button x:Name="btn_BookingFifth" DockPanel.Dock="Right" Width="110" Content="Забронировать" Padding="2" Background="{x:Null}" BorderBrush="Black" BorderThickness="1" Style="{DynamicResource ButtonStyle1}"/>
                    <TextBlock x:Name="stateDoubleLessonFifth" DockPanel.Dock="Left"/>
                </DockPanel>
                <TextBlock Height="10"/>
                <DockPanel>
                    <TextBlock Text="6. " Width="20" DockPanel.Dock="Left" TextAlignment="Center" VerticalAlignment="Center" FontSize="14"/>
                    <Button x:Name="btn_BookingSixth" DockPanel.Dock="Right" Width="110" Content="Забронировать" Padding="2" Background="{x:Null}" BorderBrush="Black" BorderThickness="1" Style="{DynamicResource ButtonStyle1}"/>
                    <TextBlock x:Name="stateDoubleLessonSixth" DockPanel.Dock="Left"/>
                </DockPanel>
                <TextBlock Height="10"/>
                <DockPanel>
                    <TextBlock Text="7. " Width="20" DockPanel.Dock="Left" TextAlignment="Center" VerticalAlignment="Center" FontSize="14"/>
                    <Button x:Name="btn_BookingSeventh" DockPanel.Dock="Right" Width="110" Content="Забронировать" Padding="2" Background="{x:Null}" BorderBrush="Black" BorderThickness="1" Style="{DynamicResource ButtonStyle1}"/>
                    <TextBlock x:Name="stateDoubleLessonSeventh" DockPanel.Dock="Left"/>
                </DockPanel>
                <TextBlock Height="10"/>
                <DockPanel>
                    <TextBlock Text="8. " Width="20" DockPanel.Dock="Left" TextAlignment="Center" VerticalAlignment="Center" FontSize="14"/>
                    <Button x:Name="btn_BookingEighth" DockPanel.Dock="Right" Width="110" Content="Забронировать" Padding="2" Background="{x:Null}" BorderBrush="Black" BorderThickness="1" Style="{DynamicResource ButtonStyle1}"/>
                    <TextBlock x:Name="stateDoubleLessongEighth" DockPanel.Dock="Left"/>
                </DockPanel>
            </StackPanel>
        </Grid>
    </Border>
</UserControl>
